// FreightOps Custom Mixins for Responsive Design and Components

// Responsive breakpoint mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: 575.98px) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: 576px) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: 768px) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: 992px) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: 1200px) { @content; }
  }
  @if $breakpoint == xxl {
    @media (min-width: 1400px) { @content; }
  }
}

// Mobile-first responsive mixins
@mixin mobile-only {
  @media (max-width: 767.98px) { @content; }
}

@mixin tablet-only {
  @media (min-width: 768px) and (max-width: 991.98px) { @content; }
}

@mixin desktop-only {
  @media (min-width: 992px) { @content; }
}

@mixin mobile-tablet {
  @media (max-width: 991.98px) { @content; }
}

// Card component mixin
@mixin card-style($shadow: $box-shadow, $radius: $border-radius-lg, $bg: white) {
  background: $bg;
  border-radius: $radius;
  box-shadow: $shadow;
  border: none;
  transition: $transition-base;
  
  &:hover {
    box-shadow: $box-shadow-lg;
    transform: translateY(-2px);
  }
}

// Button style mixins
@mixin button-style($bg-color, $text-color: white, $hover-transform: true) {
  background: $bg-color;
  color: $text-color;
  border: none;
  border-radius: $border-radius;
  padding: $btn-padding-y $btn-padding-x;
  font-weight: $btn-font-weight;
  transition: $transition-base;
  cursor: pointer;
  
  &:hover {
    @if $hover-transform {
      transform: translateY(-1px);
    }
    filter: brightness(1.1);
  }
  
  &:focus {
    outline: none;
    box-shadow: $btn-focus-box-shadow;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
  }
}

// Form input mixins
@mixin form-control-style {
  background: $input-bg;
  border: $input-border-width solid $input-border-color;
  border-radius: $input-border-radius;
  padding: 0.75rem 1rem;
  font-size: $font-size-base;
  line-height: $line-height-base;
  transition: $transition-base;
  width: 100%;
  
  &:focus {
    outline: none;
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-box-shadow;
  }
  
  &:disabled {
    background: $input-disabled-bg;
    opacity: 0.6;
    cursor: not-allowed;
  }
  
  &.is-invalid {
    border-color: $danger-500;
    
    &:focus {
      border-color: $danger-500;
      box-shadow: 0 0 0 0.125rem rgba($danger-500, 0.25);
    }
  }
  
  &.is-valid {
    border-color: $success-500;
    
    &:focus {
      border-color: $success-500;
      box-shadow: 0 0 0 0.125rem rgba($success-500, 0.25);
    }
  }
}

// Gradient mixins
@mixin gradient-primary {
  background: linear-gradient(135deg, $primary-500 0%, $primary-600 100%);
}

@mixin gradient-secondary {
  background: linear-gradient(135deg, $secondary-500 0%, $secondary-600 100%);
}

@mixin gradient-success {
  background: linear-gradient(135deg, $success-500 0%, $success-600 100%);
}

@mixin gradient-warning {
  background: linear-gradient(135deg, $warning-500 0%, $warning-600 100%);
}

@mixin gradient-danger {
  background: linear-gradient(135deg, $danger-500 0%, $danger-600 100%);
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Loading animation mixin
@mixin loading-skeleton($height: 1rem, $radius: $border-radius) {
  height: $height;
  background: linear-gradient(90deg, $neutral-200 25%, $neutral-100 50%, $neutral-200 75%);
  background-size: 200% 100%;
  animation: loading-shimmer 1.5s infinite;
  border-radius: $radius;
}

@keyframes loading-shimmer {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

// Focus visible mixin for accessibility
@mixin focus-visible($color: $primary-500) {
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// Hover lift effect
@mixin hover-lift($lift: 2px, $shadow: $box-shadow-md) {
  transition: $transition-base;
  
  &:hover {
    transform: translateY(-$lift);
    box-shadow: $shadow;
  }
}

// Responsive font size mixin
@mixin responsive-font-size($mobile: 0.875rem, $tablet: 1rem, $desktop: 1.125rem) {
  font-size: $mobile;
  
  @include respond-to(md) {
    font-size: $tablet;
  }
  
  @include respond-to(lg) {
    font-size: $desktop;
  }
}

// Container padding mixin
@mixin container-padding {
  padding-left: 1rem;
  padding-right: 1rem;
  
  @include respond-to(sm) {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  
  @include respond-to(lg) {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

// Status badge mixin
@mixin status-badge($bg-color, $text-color: white) {
  display: inline-flex;
  align-items: center;
  padding: 0.25rem 0.75rem;
  font-size: $badge-font-size;
  font-weight: $badge-font-weight;
  border-radius: $badge-border-radius;
  background: $bg-color;
  color: $text-color;
  
  &::before {
    content: '';
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    background: currentColor;
    margin-right: 0.5rem;
  }
}

// Animation mixins
@mixin fade-in($duration: 0.3s) {
  animation: fade-in $duration ease-out;
}

@mixin slide-in-up($duration: 0.3s) {
  animation: slide-in-up $duration ease-out;
}

@mixin slide-in-left($duration: 0.3s) {
  animation: slide-in-left $duration ease-out;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slide-in-up {
  from {
    opacity: 0;
    transform: translateY(1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-in-left {
  from {
    opacity: 0;
    transform: translateX(-1rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
