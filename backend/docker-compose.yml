version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: freightops-postgres
    environment:
      POSTGRES_DB: freightops
      POSTGRES_USER: freightops_user
      POSTGRES_PASSWORD: freightops_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - freightops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U freightops_user -d freightops"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: freightops-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - freightops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: freightops-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: freightops_user
      RABBITMQ_DEFAULT_PASS: freightops_password
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - freightops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: freightops-minio
    environment:
      MINIO_ROOT_USER: freightops_minio
      MINIO_ROOT_PASSWORD: freightops_minio_password
    ports:
      - "9000:9000"   # API port
      - "9001:9001"   # Console port
    volumes:
      - minio_data:/data
    networks:
      - freightops-network
    restart: unless-stopped
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FreightOps Backend Application (optional - for containerized deployment)
  freightops-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: freightops-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:postgresql://postgres:5432/freightops
      DATABASE_USERNAME: freightops_user
      DATABASE_PASSWORD: freightops_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: freightops_user
      RABBITMQ_PASSWORD: freightops_password
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: freightops_minio
      MINIO_SECRET_KEY: freightops_minio_password
      JWT_SECRET: freightops-jwt-secret-key-for-docker-deployment
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - freightops-network
    restart: unless-stopped
    profiles:
      - full-stack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: freightops-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@freightops.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - freightops-network
    restart: unless-stopped
    profiles:
      - tools
    depends_on:
      - postgres

networks:
  freightops-network:
    driver: bridge
    name: freightops-network

volumes:
  postgres_data:
    name: freightops-postgres-data
  redis_data:
    name: freightops-redis-data
  rabbitmq_data:
    name: freightops-rabbitmq-data
  minio_data:
    name: freightops-minio-data
  pgadmin_data:
    name: freightops-pgadmin-data
