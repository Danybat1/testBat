package com.freightops.repository;

import com.freightops.entity.LTA;
import com.freightops.entity.LTAPayment;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.math.BigDecimal;
import java.util.List;

// TEMPORAIRE: Repository complètement désactivé pour éviter erreur "Not a managed type"
// Fichier renommé en .disabled pour que Spring ne le détecte plus
// @Repository
public interface LTAPaymentRepository extends JpaRepository<LTAPayment, Long> {

    // TEMPORAIRE: Toutes les méthodes désactivées car entité LTAPayment non-JPA
    /*
    default List<LTAPayment> findByLtaId(Long ltaId) {
        return java.util.Collections.emptyList();
    }

    default List<LTAPayment> findByLtaIdOrderByPaymentDateDesc(Long ltaId) {
        return java.util.Collections.emptyList();
    }

    default BigDecimal getTotalPaidAmountForLTA(Long ltaId) {
        return BigDecimal.ZERO;
    }

    @Query("""
            SELECT l FROM LTA l
            WHERE l.calculatedCost IS NOT NULL
            AND l.calculatedCost > 0
            AND l.status IN ('CONFIRMED', 'IN_TRANSIT', 'DELIVERED')
            AND l.paymentMode IN ('CASH', 'PORT_DU')
            ORDER BY l.createdAt DESC
            """)
    List<LTA> findLTAsEligibleForPayment();

    @Query("""
            SELECT l FROM LTA l
            WHERE l.calculatedCost IS NOT NULL
            AND l.calculatedCost > 0
            AND l.status IN ('CONFIRMED', 'IN_TRANSIT', 'DELIVERED')
            AND l.paymentMode IN ('CASH', 'PORT_DU')
            ORDER BY l.createdAt DESC
            """)
    List<LTA> findUnpaidLTAs();
    */
}
